- bounds of a type on modules (subtyping)
    beneficial and more expressive not hard
 
 
 - implement imports
 - update recursive lets
 - finish unique type checking
 - Lets are visually recursive by default, and parser determines whether its a recursive or not
 - tokens
 - fix type schemes
 - Structures & Signatures
 - Imports
 - builtin foos
 - refined pattern guard (x % x > 0)
 - macros
 - type vars start capital, normal are lower
 - fix var names and properly eliminate ? from valid var names
 - fix module typechecking
 - fix polymorphism