DigitNumber:
    import List:$List
    -> import Bool:$Bool
    -> define digit:{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}
    -> define Number:$List[digit]
    -> define lessThan:
        given a@$digit
        -> given b@$digit
        -> return *|
        (`0, `1) -> $Bool.True
        (`1, `2) -> $Bool.True
        (`2, `3) -> $Bool.True
        (`3, `4) -> $Bool.True
        (`4, `5) -> $Bool.True
        (`5, `6) -> $Bool.True
        (`6, `7) -> $Bool.True
        (`7, `8) -> $Bool.True
        (`8, `9) -> $Bool.True
        x@Any -> 
    |
    -> return (
        Nat:$nat_data,
        increment: $increment,
        decrement: $decrement
    )