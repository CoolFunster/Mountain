Pitch
    Hook
    Problem
        Software engineering is hard
            why? because companies spend a lot of money on hiring engineers to build large scale systems
            of the time that engineers spend building these systems, 20-30% is actually spent building business logic
            rest is spent:
                Putting out fires
                resolving regression issues
                adding tests
                refactoring/maintaining code
                ramping up/learning a codebase
                finding documentation/code
        

        Writing code is hard for a developer
            Knowing how a system works and operates is a time consuming task
            Knowing what functions or ways to achieve goals already exist in code is challenging
            Arbitrary architecture decisions and code boundaries often make simple tasks have bloated scope
            90% of most programmer's job isn't really to write intelligent code, but find the right way to glue services together


        (stringing several tools together)
            for example: 
                -ex1
    

        The industry recognizes this:
            Google
                Very invested in automating their entire build system.
                They use a blaze + a tool which helps developers generate tests and a myriad of tools which help google reduce flaky tests. 
            Workday
                Workday is spending a lot of investing in development efforts to liberate the app developer from code, test and build logic.
                Workday uses a domain specific language which an app developer can use to quickly write business logic.
                    Its browser based and the user specifies
                        - an object model
                        - a soure page-action hook which triggers the new logic. 
                        - a dest page after the action with a description of how to render code.
                From that point it code generates and deploys itself to AWS instances, allowing them to churn out full features very quickly
            Apple
                Many of apples websites have a streamlined look and feel so they've developed a domain specific language which allows a product manager to specify a few things 
                on the website and it generates the page for them. (no developers!)
            Intuit
                Developing an in house domain language which helps them achieve specific goals in house. 
                (code deployment and other things)

        Companies are allocating a lot of money develop these tools in house to deal with these issues. Some companies can't, and so they are more prone to the above issues.

        What if there was a streamlined platform to help enable these develpers of these companies code more efficiently that didn't need to be developed in house, but has
        the ability to be customized to these usecases.

    Solution
        We are providing a wholistic platform that uses ai to help developers focus on whats actually important - building business logic.
            Some examples:
                - Verify business logic assumptions
                - Makes sure all edge cases are handled
                - Generates unit tests & mock data for you 
                - Generate glue code 
                - hook into build systems
                
        the core value is i want to make the process of writing code better
    Vision
        short term visoin   

        Long term vision
            NLP
                Write code from english
                generate documentation in english given code
    Action


Balance sheet

some things that it does:
    - demonstrates the assumptions of a variable and what values its supposed
        shows examples and documentation and any (hidden) refinements
    - model theory can substitute into placeholders
    - model theory can refactor code


A model

BalanceSheet:
    
